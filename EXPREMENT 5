:- initialization(main).

max(X, Y, X) :- X >= Y.
max(X, Y, Y) :- X < Y.

main :-
    max(3, 5, Max),
    write('Maximum is: '), write(Max), nl.

:- initialization(main).

min(X, Y, X) :- X =< Y.
min(X, Y, Y) :- X > Y.

main :-
    min(3, 5, Min),
    write('Minimum is: '), write(Min), nl.

% Facts
likes(mary, food).
likes(mary, wine).
likes(john, wine).
likes(john, mary).
% Rules
likes(john, X) :- likes(mary, X).        % John likes anything that Mary likes.
likes(john, X) :- likes(X, wine).        % John likes anyone who likes wine.
likes(john, X) :- likes(X, X).           % John likes anyone who likes themselves.
% Initialization and Main
:- initialization(main).

main :-
    (likes(mary, food) -> write('yes'), nl ; write('no'), nl),
    (likes(john, wine) -> write('yes'), nl ; write('no'), nl),
    (likes(john, food) -> write('yes'), nl ; write('no'), nl).
